version: '3.8'
services:
  zookeeper:
    build: ./zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: "*"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 2181 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s


  kafka:
    build: ./kafka
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 10

  eureka:
    build: ./sample-microservice-eureka-naming-server
    container_name: eureka
    ports:
      - "8761:8761"
    environment:
      JAVA_OPTS: "-Xms256m -Xmx512m"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8761/ >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 10

  hello:
    build: ./sample-microservice-hello
    container_name: hello
    depends_on:
      eureka:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      JAVA_OPTS: "-Xms256m -Xmx512m"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka/
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/hello >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 10

  messenger:
    build: ./sample-microservice-messenger
    container_name: messenger
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      JAVA_OPTS: "-Xms256m -Xmx512m"
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      APP_KAFKA_TOPIC: greetings
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8081/health >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 10

networks:
  default:
    name: sample-net